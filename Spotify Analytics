# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


SELECT * FROM BIT_DB.Spotifydata;

--How many songs does Olivia Rodrigo have on the list?
SELECT *
FROM BIT_DB.Spotifydata
WHERE artist_name='Olivia Rodrigo';


--What are the names of the songs by Olivia Rodrigo?
SELECT track_name
FROM BIT_DB.Spotifydata
WHERE artist_name='Olivia Rodrigo';


--Which artists have a popularity over 90?
SELECT *
FROM BIT_DB.Spotifydata
WHERE popularity >=90
ORDER BY popularity desc;


--What are the top 3 most popular songs?
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE popularity >=90
ORDER BY popularity desc LIMIT 3;


--How many songs does each artist have on the list?
SELECT artist_name, count (*) AS 'number_of_songs'
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY count (*) desc;
